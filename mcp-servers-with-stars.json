{
  "everything": {
    "name": "Everything",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/everything",
    "package": "@modelcontextprotocol/server-everything",
    "description": "Reference/test server with prompts, resources, and tools",
    "installCommand": "npx -y @modelcontextprotocol/server-everything",
    "requiredEnvVars": [],
    "optionalParams": [
      "CONFIG_PATH"
    ],
    "usageInstructions": "Development and testing server with example implementations",
    "category": "Development",
    "github": {
      "owner": "modelcontextprotocol",
      "repo": "servers",
      "name": "servers",
      "full_name": "modelcontextprotocol/servers",
      "description": "Model Context Protocol Servers",
      "stars": 57228,
      "forks": 6608,
      "language": "TypeScript",
      "updated_at": "2025-07-02T11:49:35Z",
      "created_at": "2024-11-19T01:10:17Z",
      "url": "https://github.com/modelcontextprotocol/servers",
      "fetched_at": "2025-07-02T11:53:19.173Z"
    }
  },
  "fetch": {
    "name": "Fetch",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",
    "package": "mcp-server-fetch",
    "description": "Web content fetching and processing",
    "installCommand": "uvx mcp-server-fetch",
    "requiredEnvVars": [],
    "optionalParams": [
      "USER_AGENT",
      "TIMEOUT"
    ],
    "usageInstructions": "Fetch and process web content for efficient LLM usage",
    "category": "Web Scraping",
    "github": {
      "owner": "modelcontextprotocol",
      "repo": "servers",
      "name": "servers",
      "full_name": "modelcontextprotocol/servers",
      "description": "Model Context Protocol Servers",
      "stars": 57228,
      "forks": 6608,
      "language": "TypeScript",
      "updated_at": "2025-07-02T11:49:35Z",
      "created_at": "2024-11-19T01:10:17Z",
      "url": "https://github.com/modelcontextprotocol/servers",
      "fetched_at": "2025-07-02T11:53:20.206Z"
    }
  },
  "filesystem": {
    "name": "Filesystem",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
    "package": "@modelcontextprotocol/server-filesystem",
    "description": "Local filesystem operations",
    "installCommand": "npx -y @modelcontextprotocol/server-filesystem",
    "requiredEnvVars": [],
    "optionalParams": [
      "ALLOWED_DIRECTORIES"
    ],
    "usageInstructions": "Read, write, and manage local files and directories",
    "category": "File Management",
    "github": {
      "owner": "modelcontextprotocol",
      "repo": "servers",
      "name": "servers",
      "full_name": "modelcontextprotocol/servers",
      "description": "Model Context Protocol Servers",
      "stars": 57228,
      "forks": 6608,
      "language": "TypeScript",
      "updated_at": "2025-07-02T11:49:35Z",
      "created_at": "2024-11-19T01:10:17Z",
      "url": "https://github.com/modelcontextprotocol/servers",
      "fetched_at": "2025-07-02T11:53:21.245Z"
    }
  },
  "git": {
    "name": "Git",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
    "package": "mcp-server-git",
    "description": "Git repository operations",
    "installCommand": "uvx mcp-server-git",
    "requiredEnvVars": [],
    "optionalParams": [
      "REPOSITORY_PATH"
    ],
    "usageInstructions": "Perform Git operations like commit, push, pull, and branch management",
    "category": "Version Control",
    "github": {
      "owner": "modelcontextprotocol",
      "repo": "servers",
      "name": "servers",
      "full_name": "modelcontextprotocol/servers",
      "description": "Model Context Protocol Servers",
      "stars": 57228,
      "forks": 6608,
      "language": "TypeScript",
      "updated_at": "2025-07-02T11:49:35Z",
      "created_at": "2024-11-19T01:10:17Z",
      "url": "https://github.com/modelcontextprotocol/servers",
      "fetched_at": "2025-07-02T11:53:22.278Z"
    }
  },
  "memory": {
    "name": "Memory",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
    "package": "@modelcontextprotocol/server-memory",
    "description": "Persistent memory and knowledge storage",
    "installCommand": "npx -y @modelcontextprotocol/server-memory",
    "requiredEnvVars": [],
    "optionalParams": [
      "MEMORY_FILE_PATH"
    ],
    "usageInstructions": "Store and retrieve persistent memories across conversations",
    "category": "Data Storage",
    "github": {
      "owner": "modelcontextprotocol",
      "repo": "servers",
      "name": "servers",
      "full_name": "modelcontextprotocol/servers",
      "description": "Model Context Protocol Servers",
      "stars": 57228,
      "forks": 6608,
      "language": "TypeScript",
      "updated_at": "2025-07-02T11:49:35Z",
      "created_at": "2024-11-19T01:10:17Z",
      "url": "https://github.com/modelcontextprotocol/servers",
      "fetched_at": "2025-07-02T11:53:24.626Z"
    }
  },
  "sequentialthinking": {
    "name": "Sequential Thinking",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/sequentialthinking",
    "package": "@modelcontextprotocol/server-sequential-thinking",
    "description": "Sequential thinking and reasoning tools",
    "installCommand": "npx -y @modelcontextprotocol/server-sequential-thinking",
    "requiredEnvVars": [],
    "optionalParams": [
      "THINKING_DEPTH"
    ],
    "usageInstructions": "Enable step-by-step reasoning and problem-solving approaches",
    "category": "AI/ML",
    "github": {
      "owner": "modelcontextprotocol",
      "repo": "servers",
      "name": "servers",
      "full_name": "modelcontextprotocol/servers",
      "description": "Model Context Protocol Servers",
      "stars": 57228,
      "forks": 6608,
      "language": "TypeScript",
      "updated_at": "2025-07-02T11:49:35Z",
      "created_at": "2024-11-19T01:10:17Z",
      "url": "https://github.com/modelcontextprotocol/servers",
      "fetched_at": "2025-07-02T11:53:25.659Z"
    }
  },
  "time": {
    "name": "Time",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/time",
    "package": "mcp-server-time",
    "description": "Time and scheduling utilities",
    "installCommand": "uvx mcp-server-time",
    "requiredEnvVars": [],
    "optionalParams": [
      "TIMEZONE"
    ],
    "usageInstructions": "Get current time, schedule events, and manage time zones",
    "category": "Utilities",
    "github": {
      "owner": "modelcontextprotocol",
      "repo": "servers",
      "name": "servers",
      "full_name": "modelcontextprotocol/servers",
      "description": "Model Context Protocol Servers",
      "stars": 57228,
      "forks": 6608,
      "language": "TypeScript",
      "updated_at": "2025-07-02T11:49:35Z",
      "created_at": "2024-11-19T01:10:17Z",
      "url": "https://github.com/modelcontextprotocol/servers",
      "fetched_at": "2025-07-02T11:53:26.693Z"
    }
  },
  "obsidian": {
    "name": "Obsidian",
    "githubLink": "https://github.com/calclavia/mcp-obsidian",
    "package": null,
    "description": "Read and search through Obsidian vault or Markdown notes directory",
    "installCommand": "pip install mcp-obsidian",
    "requiredEnvVars": [
      "OBSIDIAN_VAULT_PATH"
    ],
    "optionalParams": [
      "SEARCH_DEPTH"
    ],
    "usageInstructions": "Access and search Obsidian notes and Markdown files",
    "category": "Knowledge Management",
    "github": {
      "owner": "calclavia",
      "repo": "mcp-obsidian",
      "error": "HTTP 301: Moved Permanently"
    }
  },
  "spotify": {
    "name": "Spotify",
    "githubLink": "https://github.com/varunneal/spotify-mcp",
    "package": null,
    "description": "MCP server allowing LLM to play and use Spotify",
    "installCommand": "pip install spotify-mcp",
    "requiredEnvVars": [
      "SPOTIFY_CLIENT_ID",
      "SPOTIFY_CLIENT_SECRET"
    ],
    "optionalParams": [
      "SPOTIFY_REDIRECT_URI"
    ],
    "usageInstructions": "Control Spotify playback and search music",
    "category": "Entertainment",
    "github": {
      "owner": "varunneal",
      "repo": "spotify-mcp",
      "name": "spotify-mcp",
      "full_name": "varunneal/spotify-mcp",
      "description": "MCP to connect your LLM with Spotify.",
      "stars": 383,
      "forks": 70,
      "language": "Python",
      "updated_at": "2025-07-02T08:49:28Z",
      "created_at": "2024-12-01T02:06:14Z",
      "url": "https://github.com/varunneal/spotify-mcp",
      "fetched_at": "2025-07-02T11:53:28.228Z"
    }
  },
  "kubernetes": {
    "name": "Kubernetes",
    "githubLink": "https://github.com/Flux159/mcp-server-kubernetes",
    "package": null,
    "description": "Connect to Kubernetes cluster and manage pods, deployments, and services",
    "installCommand": "pip install mcp-kubernetes",
    "requiredEnvVars": [
      "KUBECONFIG"
    ],
    "optionalParams": [
      "NAMESPACE"
    ],
    "usageInstructions": "Manage Kubernetes resources via natural language interface",
    "category": "DevOps",
    "github": {
      "owner": "Flux159",
      "repo": "mcp-server-kubernetes",
      "name": "mcp-server-kubernetes",
      "full_name": "Flux159/mcp-server-kubernetes",
      "description": "MCP Server for kubernetes management commands",
      "stars": 815,
      "forks": 124,
      "language": "TypeScript",
      "updated_at": "2025-07-02T04:19:36Z",
      "created_at": "2024-12-08T00:01:28Z",
      "url": "https://github.com/Flux159/mcp-server-kubernetes",
      "fetched_at": "2025-07-02T11:53:29.500Z"
    }
  },
  "aws": {
    "name": "AWS",
    "githubLink": "https://github.com/awslabs/mcp",
    "package": null,
    "description": "Specialized MCP servers bringing AWS best practices to development workflow",
    "installCommand": "pip install mcp-aws",
    "requiredEnvVars": [
      "AWS_ACCESS_KEY_ID",
      "AWS_SECRET_ACCESS_KEY",
      "AWS_REGION"
    ],
    "optionalParams": [
      "AWS_PROFILE"
    ],
    "usageInstructions": "Interact with various AWS services and resources",
    "category": "Cloud Services",
    "github": {
      "owner": "awslabs",
      "repo": "mcp",
      "name": "mcp",
      "full_name": "awslabs/mcp",
      "description": "AWS MCP Servers — helping you get the most out of AWS, wherever you use MCP.",
      "stars": 4300,
      "forks": 513,
      "language": "Python",
      "updated_at": "2025-07-01T13:38:37Z",
      "created_at": "2025-03-21T00:39:00Z",
      "url": "https://github.com/awslabs/mcp"
    }
  },
  "clerk": {
    "name": "Clerk",
    "githubLink": "https://github.com/clerk/javascript/tree/HEAD/packages/agent-toolkit",
    "package": "@clerk/agent-toolkit",
    "description": "Authentication and user management with Clerk for AI agents",
    "installCommand": "npx -y @clerk/agent-toolkit",
    "requiredEnvVars": [
      "CLERK_SECRET_KEY"
    ],
    "optionalParams": [],
    "usageInstructions": "Integrate Clerk authentication with AI agent frameworks. Manage users, organizations, and inject session claims into AI prompts. Warning: Agent behavior is non-deterministic - use carefully in production.",
    "category": "Authentication",
    "github": {
      "owner": "clerk",
      "repo": "javascript",
      "name": "javascript",
      "full_name": "clerk/javascript",
      "description": "Official JavaScript repository for Clerk authentication",
      "stars": 1491,
      "forks": 359,
      "language": "TypeScript",
      "updated_at": "2025-07-01T03:41:20Z",
      "created_at": "2021-12-14T16:53:48Z",
      "url": "https://github.com/clerk/javascript"
    }
  },
  "playwright": {
    "name": "Microsoft Playwright",
    "githubLink": "https://github.com/microsoft/playwright-mcp",
    "package": "@playwright/mcp@latest",
    "description": "Browser automation and testing with Playwright",
    "installCommand": "npx -y @playwright/mcp@latest",
    "requiredEnvVars": [],
    "optionalParams": [
      "BROWSER_TYPE",
      "HEADLESS",
      "VIEWPORT_WIDTH",
      "VIEWPORT_HEIGHT",
      "DEFAULT_TIMEOUT"
    ],
    "usageInstructions": "Automate browser interactions, perform web testing, and capture screenshots",
    "category": "Development Tools",
    "github": {
      "owner": "microsoft",
      "repo": "playwright-mcp",
      "name": "playwright-mcp",
      "full_name": "microsoft/playwright-mcp",
      "description": "Playwright MCP server",
      "stars": 13531,
      "forks": 946,
      "language": "TypeScript",
      "updated_at": "2025-07-01T13:28:15Z",
      "created_at": "2025-03-21T17:48:36Z",
      "url": "https://github.com/microsoft/playwright-mcp"
    }
  },
  "context7": {
    "name": "Context7",
    "githubLink": "https://github.com/upstash/context7",
    "package": "@upstash/context7-mcp",
    "description": "Context management and conversation memory system",
    "installCommand": "npx -y @upstash/context7-mcp",
    "requiredEnvVars": [],
    "optionalParams": [
      "UPSTASH_REDIS_REST_URL",
      "UPSTASH_REDIS_REST_TOKEN",
      "CONTEXT_KEY",
      "MAX_CONTEXT_SIZE"
    ],
    "usageInstructions": "Manage conversation context, maintain session memory, and handle context switching",
    "category": "AI & Machine Learning",
    "github": {
      "owner": "upstash",
      "repo": "context7",
      "name": "context7",
      "full_name": "upstash/context7",
      "description": "Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors",
      "stars": 16462,
      "forks": 806,
      "language": "JavaScript",
      "updated_at": "2025-07-01T13:41:06Z",
      "created_at": "2025-03-26T23:40:39Z",
      "url": "https://github.com/upstash/context7"
    }
  },
  "taskmaster": {
    "name": "Task Master",
    "githubLink": "https://github.com/eyaltoledano/claude-task-master",
    "package": "task-master-mcp",
    "description": "Comprehensive task management with projects, contexts, and advanced organization",
    "installCommand": "npx -y --package=task-master-ai task-master-ai",
    "requiredEnvVars": [],
    "optionalParams": [
      ""
    ],
    "usageInstructions": "Manage tasks with projects, contexts, priorities, due dates, and dependencies. Supports natural language input for task creation and filtering.",
    "category": "Productivity",
    "github": {
      "owner": "eyaltoledano",
      "repo": "claude-task-master",
      "name": "claude-task-master",
      "full_name": "eyaltoledano/claude-task-master",
      "description": "An AI-powered task-management system you can drop into Cursor, Lovable, Windsurf, Roo, and others.",
      "stars": 17163,
      "forks": 1725,
      "language": "JavaScript",
      "updated_at": "2025-07-01T13:43:59Z",
      "created_at": "2025-03-04T18:54:54Z",
      "url": "https://github.com/eyaltoledano/claude-task-master"
    }
  },
  "xcodebuild": {
    "name": "Xcode Build",
    "githubLink": "https://github.com/cameroncooke/XcodeBuildMCP",
    "package": "xcodebuildmcp",
    "description": "Xcode project building and iOS/macOS development automation",
    "installCommand": "npx -y xcodebuildmcp@latest",
    "requiredEnvVars": [],
    "optionalParams": [
      "SENTRY_DISABLED",
      "PROJECT_PATH",
      "SCHEME",
      "CONFIGURATION",
      "DESTINATION"
    ],
    "usageInstructions": "Build, test, and manage Xcode projects for iOS and macOS development",
    "category": "Development Tools",
    "github": {
      "owner": "cameroncooke",
      "repo": "XcodeBuildMCP",
      "name": "XcodeBuildMCP",
      "full_name": "cameroncooke/XcodeBuildMCP",
      "description": "A Model Context Protocol (MCP) server that provides Xcode-related tools for integration with AI assistants and other MCP clients.",
      "stars": 1845,
      "forks": 77,
      "language": "TypeScript",
      "updated_at": "2025-07-01T12:30:13Z",
      "created_at": "2025-03-09T17:31:18Z",
      "url": "https://github.com/cameroncooke/XcodeBuildMCP"
    }
  },
  "supabase": {
    "name": "Supabase",
    "githubLink": "https://github.com/supabase-community/supabase-mcp",
    "package": "@supabase/mcp-server-supabase",
    "description": "Complete Supabase platform integration for database and project management",
    "installCommand": "npx -y @supabase/mcp-server-supabase@latest",
    "requiredEnvVars": [
      "SUPABASE_ACCESS_TOKEN"
    ],
    "optionalParams": [
      "PROJECT_REF"
    ],
    "usageInstructions": "Manage Supabase projects, design tables, run SQL queries, create database branches, generate TypeScript types, and handle migrations",
    "category": "Databases",
    "github": {
      "owner": "supabase-community",
      "repo": "supabase-mcp",
      "name": "supabase-mcp",
      "full_name": "supabase-community/supabase-mcp",
      "description": "Connect Supabase to your AI assistants",
      "stars": 1701,
      "forks": 155,
      "language": "TypeScript",
      "updated_at": "2025-07-01T11:35:54Z",
      "created_at": "2024-12-20T23:52:42Z",
      "url": "https://github.com/supabase-community/supabase-mcp"
    }
  },
  "postgres-crystal": {
    "name": "PostgreSQL (Crystal DBA)",
    "githubLink": "https://github.com/crystaldba/postgres-mcp",
    "package": "postgres-mcp",
    "description": "PostgreSQL database operations with advanced DBA capabilities",
    "installCommand": "pip install postgres-mcp",
    "requiredEnvVars": [
      "PG_CONNECTION_STRING"
    ],
    "optionalParams": [],
    "usageInstructions": "Execute SQL queries, manage database schema, perform DBA operations on PostgreSQL databases. Requires a PostgreSQL connection string.",
    "category": "Databases",
    "github": {
      "owner": "crystaldba",
      "repo": "postgres-mcp",
      "name": "postgres-mcp",
      "full_name": "crystaldba/postgres-mcp",
      "description": "Postgres MCP Pro provides configurable read/write access and performance analysis for you and your AI agents.",
      "stars": 575,
      "forks": 74,
      "language": "Python",
      "updated_at": "2025-07-01T13:28:34Z",
      "created_at": "2025-03-24T18:28:53Z",
      "url": "https://github.com/crystaldba/postgres-mcp"
    }
  },
  "qdrant": {
    "name": "Qdrant",
    "githubLink": "https://github.com/qdrant/mcp-server-qdrant",
    "package": "@qdrant/mcp-server-qdrant",
    "description": "Vector database operations for Qdrant - store and search high-dimensional vectors",
    "installCommand": "npx -y @qdrant/mcp-server-qdrant",
    "requiredEnvVars": [
      "QDRANT_URL"
    ],
    "optionalParams": [
      "QDRANT_API_KEY"
    ],
    "usageInstructions": "Manage collections, insert vectors, perform similarity searches, and handle vector data in Qdrant. Requires Qdrant instance URL.",
    "category": "Databases",
    "github": {
      "owner": "qdrant",
      "repo": "mcp-server-qdrant",
      "name": "mcp-server-qdrant",
      "full_name": "qdrant/mcp-server-qdrant",
      "description": "An official Qdrant Model Context Protocol (MCP) server implementation",
      "stars": 736,
      "forks": 100,
      "language": "Python",
      "updated_at": "2025-07-01T04:11:03Z",
      "created_at": "2024-12-02T12:07:39Z",
      "url": "https://github.com/qdrant/mcp-server-qdrant"
    }
  },
  "skyvern": {
    "name": "Skyvern",
    "githubLink": "https://github.com/Skyvern-AI/skyvern",
    "package": "skyvern",
    "description": "Advanced browser automation with AI-powered web interaction",
    "installCommand": "python -m skyvern run mcp",
    "requiredEnvVars": [
      "SKYVERN_API_KEY"
    ],
    "optionalParams": [
      "SKYVERN_BASE_URL"
    ],
    "defaultEnvVars": {
      "SKYVERN_BASE_URL": "https://api.skyvern.com"
    },
    "usageInstructions": "Automate browser-based workflows, fill forms, download files, and interact with websites using AI",
    "category": "Browser Automation",
    "github": {
      "owner": "Skyvern-AI",
      "repo": "skyvern",
      "name": "skyvern",
      "full_name": "Skyvern-AI/skyvern",
      "description": "Automate browser-based workflows with LLMs and Computer Vision",
      "stars": 13726,
      "forks": 1128,
      "language": "Python",
      "updated_at": "2025-07-02T11:37:24Z",
      "created_at": "2024-02-28T15:45:19Z",
      "url": "https://github.com/Skyvern-AI/skyvern",
      "fetched_at": "2025-07-02T11:53:23.591Z"
    }
  },
  "nixos": {
    "name": "NixOS",
    "githubLink": "https://github.com/utensils/mcp-nixos",
    "package": "mcp-nixos",
    "description": "Provides real-time information about NixOS packages, configurations, and version histories",
    "installCommand": "uvx mcp-nixos",
    "requiredEnvVars": [],
    "optionalParams": [
      "ELASTICSEARCH_URL"
    ],
    "usageInstructions": "Search NixOS packages, configuration options, Home Manager settings, nix-darwin configurations, and package version history. Queries live NixOS APIs for accurate data.",
    "category": "Development Tools",
    "github": {
      "owner": "utensils",
      "repo": "mcp-nixos",
      "name": "mcp-nixos",
      "full_name": "utensils/mcp-nixos",
      "description": "MCP-NixOS - Model Context Protocol Server for NixOS resources",
      "stars": 164,
      "forks": 11,
      "language": "HTML",
      "updated_at": "2025-07-01T10:07:12Z",
      "created_at": "2025-03-20T05:05:00Z",
      "url": "https://github.com/utensils/mcp-nixos"
    }
  },
  "shadcn-ui": {
    "name": "shadcn/ui",
    "githubLink": "https://github.com/heilgar/shadcn-ui-mcp-server",
    "package": "@heilgar/shadcn-ui-mcp-server",
    "description": "Browse and install shadcn/ui components and utilities for React applications",
    "installCommand": "npx -y @heilgar/shadcn-ui-mcp-server",
    "requiredEnvVars": [],
    "optionalParams": [
      "FRAMEWORK"
    ],
    "usageInstructions": "Search, view documentation, and install shadcn/ui components directly into your React project. Supports component browsing, installation, and dependency management.",
    "category": "UI Components",
    "github": {
      "owner": "heilgar",
      "repo": "shadcn-ui-mcp-server",
      "name": "shadcn-ui-mcp-server",
      "full_name": "heilgar/shadcn-ui-mcp-server",
      "description": null,
      "stars": 5,
      "forks": 2,
      "language": "TypeScript",
      "updated_at": "2025-06-30T23:39:32Z",
      "created_at": "2025-05-15T20:23:42Z",
      "url": "https://github.com/heilgar/shadcn-ui-mcp-server"
    }
  },
  "gpt-researcher": {
    "name": "GPT Researcher",
    "githubLink": "https://github.com/assafelovic/gpt-researcher",
    "package": "gptr-mcp",
    "description": "AI-powered research assistant that conducts comprehensive online research on any topic",
    "installCommand": "git clone https://github.com/assafelovic/gptr-mcp.git && cd gptr-mcp && pip install -r requirements.txt",
    "requiredEnvVars": [
      "OPENAI_API_KEY",
      "TAVILY_API_KEY"
    ],
    "optionalParams": [
      "RESEARCH_DEPTH",
      "REPORT_FORMAT",
      "MAX_SOURCES"
    ],
    "usageInstructions": "Perform deep research on topics, generate comprehensive reports, quick searches, and track sources. Requires manual setup with git clone and Python environment.",
    "category": "Research & Analysis",
    "github": {
      "owner": "assafelovic",
      "repo": "gpt-researcher",
      "name": "gpt-researcher",
      "full_name": "assafelovic/gpt-researcher",
      "description": "LLM based autonomous agent that conducts deep local and web research on any topic and generates a long report with citations.",
      "stars": 22148,
      "forks": 2915,
      "language": "Python",
      "updated_at": "2025-07-01T13:31:57Z",
      "created_at": "2023-05-12T10:33:54Z",
      "url": "https://github.com/assafelovic/gpt-researcher"
    }
  },
  "pr-reviewer": {
    "name": "PR Reviewer",
    "githubLink": "https://github.com/elhadjaoui/pr_reviewer",
    "package": null,
    "description": "Automatically analyzes Pull Requests, reviews changes, and adds comments directly to modified files",
    "installCommand": "pip install requests python-dotenv 'mcp[cli]' pydrive",
    "requiredEnvVars": [
      "GITHUB_TOKEN"
    ],
    "optionalParams": [
      "GOOGLE_PARENT_FOLDER_ID"
    ],
    "usageInstructions": "Review pull requests automatically, add inline comments, approve PRs, and optionally store reviews in Google Drive. Requires GitHub personal access token with appropriate permissions.",
    "category": "Development Tools",
    "github": {
      "owner": "elhadjaoui",
      "repo": "pr_reviewer",
      "name": "pr_reviewer",
      "full_name": "elhadjaoui/pr_reviewer",
      "description": null,
      "stars": 1,
      "forks": 0,
      "language": "Python",
      "updated_at": "2025-06-18T15:19:55Z",
      "created_at": "2025-04-27T22:01:35Z",
      "url": "https://github.com/elhadjaoui/pr_reviewer"
    }
  },
  "gdrive-ej": {
    "name": "Google Drive (Enhanced)",
    "githubLink": "https://github.com/ejoyee/ej-mcp-server-gdrive",
    "package": "@modelcontextprotocol/server-gdrive",
    "description": "Enhanced Google Drive integration with file listing, reading, and searching capabilities with automatic format conversion",
    "installCommand": "npx -y @modelcontextprotocol/server-gdrive",
    "requiredEnvVars": [
      "GDRIVE_CREDENTIALS_PATH"
    ],
    "optionalParams": [
      "FOLDER_ID",
      "MAX_RESULTS"
    ],
    "usageInstructions": "Access Google Drive files with advanced search, read documents with automatic format conversion, and manage Drive content. Requires Google OAuth credentials JSON file.",
    "category": "Cloud Storage",
    "github": {
      "owner": "ejoyee",
      "repo": "ej-mcp-server-gdrive",
      "name": "ej-mcp-server-gdrive",
      "full_name": "ejoyee/ej-mcp-server-gdrive",
      "description": null,
      "stars": 0,
      "forks": 0,
      "language": "JavaScript",
      "updated_at": "2025-04-28T03:17:22Z",
      "created_at": "2025-04-28T01:30:02Z",
      "url": "https://github.com/ejoyee/ej-mcp-server-gdrive"
    }
  },
  "sharepoint": {
    "name": "SharePoint",
    "githubLink": "https://github.com/Sofias-ai/mcp-sharepoint",
    "package": "mcp-sharepoint-server",
    "description": "Lightweight Microsoft SharePoint integration for document and folder management",
    "installCommand": "pip install mcp-sharepoint-server",
    "requiredEnvVars": [
      "SHP_ID_APP",
      "SHP_ID_APP_SECRET",
      "SHP_SITE_URL",
      "SHP_TENANT_ID"
    ],
    "optionalParams": [
      "SHP_DOC_LIBRARY"
    ],
    "usageInstructions": "List, read, search, and download SharePoint documents and folders. Requires Azure AD application credentials for authentication.",
    "category": "Cloud Storage",
    "github": {
      "owner": "Sofias-ai",
      "repo": "mcp-sharepoint",
      "name": "mcp-sharepoint",
      "full_name": "Sofias-ai/mcp-sharepoint",
      "description": null,
      "stars": 8,
      "forks": 3,
      "language": "Python",
      "updated_at": "2025-06-24T02:52:19Z",
      "created_at": "2025-04-24T01:21:15Z",
      "url": "https://github.com/Sofias-ai/mcp-sharepoint"
    }
  },
  "just-prompt": {
    "name": "Just Prompt",
    "githubLink": "https://github.com/disler/just-prompt",
    "package": null,
    "description": "Unified interface to multiple LLM providers with parallel querying capabilities",
    "installCommand": "git clone https://github.com/disler/just-prompt && cd just-prompt && uv sync",
    "requiredEnvVars": [],
    "optionalParams": [
      "OPENAI_API_KEY",
      "ANTHROPIC_API_KEY",
      "GEMINI_API_KEY",
      "GROQ_API_KEY",
      "DEEPSEEK_API_KEY",
      "OLLAMA_HOST"
    ],
    "usageInstructions": "Query multiple LLM providers (OpenAI, Anthropic, Google, Groq, DeepSeek, Ollama) simultaneously or individually. Configure API keys for the providers you want to use.",
    "category": "AI/ML",
    "github": {
      "owner": "disler",
      "repo": "just-prompt",
      "name": "just-prompt",
      "full_name": "disler/just-prompt",
      "description": "just-prompt is an MCP server that provides a unified interface to top LLM providers (OpenAI, Anthropic, Google Gemini, Groq, DeepSeek, and Ollama)",
      "stars": 503,
      "forks": 103,
      "language": "Python",
      "updated_at": "2025-07-01T02:33:48Z",
      "created_at": "2025-03-31T02:07:01Z",
      "url": "https://github.com/disler/just-prompt"
    }
  },
  "clickup": {
    "name": "ClickUp",
    "githubLink": "https://github.com/taazkareem/clickup-mcp-server",
    "package": "@taazkareem/clickup-mcp-server",
    "description": "Comprehensive ClickUp task management integration with 36 tools for AI applications",
    "installCommand": "npx -y @taazkareem/clickup-mcp-server@latest",
    "requiredEnvVars": [
      "CLICKUP_API_KEY",
      "CLICKUP_TEAM_ID"
    ],
    "optionalParams": [
      "ENABLE_SSE",
      "PORT",
      "DISABLED_TOOLS"
    ],
    "usageInstructions": "Manage ClickUp tasks, spaces, lists, and folders with natural language. Create, update, track time, and manage team members. Supports HTTP/SSE transport and markdown formatting.",
    "category": "Project Management",
    "github": {
      "owner": "taazkareem",
      "repo": "clickup-mcp-server",
      "name": "clickup-mcp-server",
      "full_name": "taazkareem/clickup-mcp-server",
      "description": "ClickUp MCP Server - Integrate ClickUp project management with AI through Model Context Protocol",
      "stars": 250,
      "forks": 68,
      "language": "TypeScript",
      "updated_at": "2025-06-30T12:48:06Z",
      "created_at": "2025-02-10T19:51:55Z",
      "url": "https://github.com/taazkareem/clickup-mcp-server"
    }
  },
  "cognition-wheel": {
    "name": "Cognition Wheel",
    "githubLink": "https://github.com/Hormold/cognition-wheel",
    "package": "cognition-wheel",
    "description": "AI-powered cognitive assessment and development tool that helps track and improve various cognitive abilities",
    "installCommand": "pip install cognition-wheel",
    "requiredEnvVars": [],
    "optionalParams": [
      "CONFIG_PATH",
      "MODEL_PATH",
      "OUTPUT_DIR"
    ],
    "usageInstructions": "Assess and track cognitive abilities including memory, attention, reasoning, and problem-solving. Generate personalized cognitive development plans and track progress over time.",
    "category": "AI & Machine Learning",
    "github": {
      "owner": "Hormold",
      "repo": "cognition-wheel",
      "name": "cognition-wheel",
      "full_name": "Hormold/cognition-wheel",
      "description": "A Model Context Protocol (MCP) server that implements a \"wisdom of crowds\" approach to AI reasoning by consulting multiple state-of-the-art language models in parallel and synthesizing their responses.",
      "stars": 161,
      "forks": 7,
      "language": "TypeScript",
      "updated_at": "2025-07-01T07:06:25Z",
      "created_at": "2025-06-15T03:45:12Z",
      "url": "https://github.com/Hormold/cognition-wheel"
    }
  },
  "github-project-manager": {
    "name": "GitHub Project Manager",
    "githubLink": "https://github.com/kunwarVivek/mcp-github-project-manager",
    "package": "mcp-github-project-manager",
    "description": "Comprehensive GitHub project management tool for managing repositories, issues, pull requests, and GitHub Projects",
    "installCommand": "npx -y mcp-github-project-manager",
    "requiredEnvVars": [
      "GITHUB_TOKEN",
      "GITHUB_OWNER"
    ],
    "optionalParams": [
      "DEFAULT_ORG",
      "DEFAULT_REPO",
      "MAX_RESULTS"
    ],
    "usageInstructions": "Manage GitHub repositories, create and update issues, handle pull requests, manage GitHub Projects (v2), and automate project workflows. Requires a GitHub personal access token with appropriate permissions.",
    "category": "Development Tools",
    "github": {
      "owner": "kunwarVivek",
      "repo": "mcp-github-project-manager",
      "name": "mcp-github-project-manager",
      "full_name": "kunwarVivek/mcp-github-project-manager",
      "description": "a mcp server to manage github project's functionality ",
      "stars": 37,
      "forks": 20,
      "language": "TypeScript",
      "updated_at": "2025-06-30T13:27:13Z",
      "created_at": "2024-12-13T19:17:13Z",
      "url": "https://github.com/kunwarVivek/mcp-github-project-manager"
    }
  },
  "github": {
    "name": "GitHub",
    "githubLink": "https://github.com/github/github-mcp-server",
    "package": "ghcr.io/github/github-mcp-server",
    "description": "Official GitHub MCP server providing seamless integration with GitHub APIs for advanced automation and interaction capabilities",
    "installCommand": "docker run -i --rm -e GITHUB_PERSONAL_ACCESS_TOKEN=<your-token> ghcr.io/github/github-mcp-server",
    "requiredEnvVars": [
      "GITHUB_PERSONAL_ACCESS_TOKEN"
    ],
    "optionalParams": [
      "--toolsets",
      "--read-only",
      "--gh-host",
      "--dynamic-toolsets"
    ],
    "usageInstructions": "Access GitHub APIs through MCP for repository management, issues, pull requests, actions, and more. Requires Docker and a GitHub Personal Access Token.",
    "category": "Development Tools",
    "github": {
      "owner": "github",
      "repo": "github-mcp-server",
      "name": "github-mcp-server",
      "full_name": "github/github-mcp-server",
      "description": "GitHub's official MCP Server",
      "stars": 16662,
      "forks": 1227,
      "language": "Go",
      "updated_at": "2025-07-01T13:20:44Z",
      "created_at": "2025-03-04T16:42:04Z",
      "url": "https://github.com/github/github-mcp-server"
    }
  },
  "firecrawl": {
    "name": "Firecrawl",
    "githubLink": "https://github.com/mendableai/firecrawl-mcp-server",
    "package": "firecrawl-mcp-server",
    "description": "Advanced web scraping and crawling with intelligent content extraction and data processing",
    "installCommand": "npx -y firecrawl-mcp-server",
    "requiredEnvVars": [
      "FIRECRAWL_API_KEY"
    ],
    "optionalParams": [
      "MAX_PAGES",
      "TIMEOUT",
      "INCLUDE_HTML",
      "INCLUDE_RAW_HTML"
    ],
    "usageInstructions": "Crawl websites, extract structured data, and process web content at scale. Supports intelligent content extraction with configurable crawling parameters.",
    "category": "Web Scraping",
    "github": {
      "owner": "mendableai",
      "repo": "firecrawl-mcp-server",
      "name": "firecrawl-mcp-server",
      "full_name": "mendableai/firecrawl-mcp-server",
      "description": "Official Firecrawl MCP Server - Adds powerful web scraping to Cursor, Claude and any other LLM clients.",
      "stars": 3622,
      "forks": 351,
      "language": "JavaScript",
      "updated_at": "2025-07-01T12:52:13Z",
      "created_at": "2024-12-06T07:50:27Z",
      "url": "https://github.com/mendableai/firecrawl-mcp-server"
    }
  },
  "google-maps": {
    "name": "Google Maps",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps",
    "package": "@modelcontextprotocol/server-google-maps",
    "description": "Google Maps integration for location services, directions, and place information",
    "installCommand": "npx -y @modelcontextprotocol/server-google-maps",
    "requiredEnvVars": [
      "GOOGLE_MAPS_API_KEY"
    ],
    "optionalParams": [
      "DEFAULT_LOCATION",
      "SEARCH_RADIUS",
      "LANGUAGE"
    ],
    "usageInstructions": "Search places, get directions, geocode addresses, and access Google Maps services. Requires Google Maps API key with appropriate services enabled.",
    "category": "Location Services",
    "github": {
      "owner": "modelcontextprotocol",
      "repo": "servers",
      "name": "servers",
      "full_name": "modelcontextprotocol/servers",
      "description": "Model Context Protocol Servers",
      "stars": 57035,
      "forks": 6587,
      "language": "Python",
      "updated_at": "2025-07-01T13:42:44Z",
      "created_at": "2024-11-19T01:10:17Z",
      "url": "https://github.com/modelcontextprotocol/servers"
    }
  },
  "apple-mcp": {
    "name": "Apple MCP",
    "githubLink": "https://github.com/supermemoryai/apple-mcp",
    "package": "apple-mcp",
    "description": "Apple ecosystem integration for accessing iOS/macOS system information and device management",
    "installCommand": "pip install apple-mcp",
    "requiredEnvVars": [],
    "optionalParams": [
      "DEVICE_ID",
      "BUNDLE_ID",
      "SYSTEM_INTEGRATION_LEVEL"
    ],
    "usageInstructions": "Access Apple device information, system status, and integrate with iOS/macOS applications. Provides device management and system monitoring capabilities.",
    "category": "System Integration",
    "github": {
      "owner": "supermemoryai",
      "repo": "apple-mcp",
      "name": "apple-mcp",
      "full_name": "supermemoryai/apple-mcp",
      "description": "Collection of apple-native tools for the model context protocol.",
      "stars": 2067,
      "forks": 152,
      "language": "TypeScript",
      "updated_at": "2025-07-01T11:18:45Z",
      "created_at": "2025-02-19T23:50:49Z",
      "url": "https://github.com/supermemoryai/apple-mcp"
    }
  },
  "mindsdb": {
    "name": "MindsDB",
    "githubLink": "https://github.com/mindsdb/mindsdb",
    "package": "mindsdb",
    "description": "AI query engine for federated data sources with built-in MCP server for database and ML operations",
    "installCommand": "pip install mindsdb",
    "requiredEnvVars": [],
    "optionalParams": [
      "MINDSDB_DB_CON",
      "MINDSDB_STORAGE_PATH",
      "MINDSDB_CONFIG_PATH"
    ],
    "usageInstructions": "Connect multiple data sources (SQL databases, APIs, files) and query them with natural language. Includes ML capabilities and predictive analytics.",
    "category": "AI & Machine Learning",
    "github": {
      "owner": "mindsdb",
      "repo": "mindsdb",
      "name": "mindsdb",
      "full_name": "mindsdb/mindsdb",
      "description": "AI's query engine - Platform for building AI that can answer questions over large scale federated data. - The only MCP Server you'll ever need",
      "stars": 33090,
      "forks": 5423,
      "language": "Python",
      "updated_at": "2025-07-01T13:11:42Z",
      "created_at": "2018-08-02T17:56:45Z",
      "url": "https://github.com/mindsdb/mindsdb"
    }
  },
  "fastmcp": {
    "name": "FastMCP",
    "githubLink": "https://github.com/jlowin/fastmcp",
    "package": "fastmcp",
    "description": "Python framework for rapidly building MCP servers and clients with simplified development workflow",
    "installCommand": "uv pip install fastmcp",
    "requiredEnvVars": [],
    "optionalParams": [
      "SERVER_NAME",
      "DEBUG",
      "LOG_LEVEL"
    ],
    "usageInstructions": "Build custom MCP servers quickly using Python. Provides scaffolding, decorators, and utilities for MCP development.",
    "category": "Development Tools",
    "github": {
      "owner": "jlowin",
      "repo": "fastmcp",
      "name": "fastmcp",
      "full_name": "jlowin/fastmcp",
      "description": "🚀 The fast, Pythonic way to build MCP servers and clients",
      "stars": 13696,
      "forks": 841,
      "language": "Python",
      "updated_at": "2025-07-01T13:22:16Z",
      "created_at": "2024-11-30T01:47:40Z",
      "url": "https://github.com/jlowin/fastmcp"
    }
  },
  "figma-context": {
    "name": "Figma Context MCP",
    "githubLink": "https://github.com/GLips/Figma-Context-MCP",
    "package": "figma-developer-mcp",
    "description": "Provides Figma design data and context to AI coding tools for design-to-code workflows",
    "installCommand": "npx -y figma-developer-mcp",
    "requiredEnvVars": [
      "FIGMA_API_KEY"
    ],
    "optionalParams": [
      "PORT"
    ],
    "usageInstructions": "Access Figma files, frames, and design tokens to enhance AI-powered code generation. Requires Figma API access token.",
    "category": "Design Tools",
    "github": {
      "owner": "GLips",
      "repo": "Figma-Context-MCP",
      "name": "Figma-Context-MCP",
      "full_name": "GLips/Figma-Context-MCP",
      "description": "MCP server to provide Figma layout information to AI coding agents like Cursor",
      "stars": 8709,
      "forks": 709,
      "language": "TypeScript",
      "updated_at": "2025-07-01T13:29:50Z",
      "created_at": "2025-02-13T02:55:06Z",
      "url": "https://github.com/GLips/Figma-Context-MCP"
    }
  },
  "ghidra-mcp": {
    "name": "Ghidra MCP",
    "githubLink": "https://github.com/LaurieWired/GhidraMCP",
    "package": null,
    "description": "MCP server for autonomous reverse engineering with Ghidra - enables AI-powered binary analysis",
    "installCommand": "git clone https://github.com/LaurieWired/GhidraMCP.git && cd GhidraMCP && python3 -m pip install mcp",
    "requiredEnvVars": [],
    "optionalParams": [
      "GHIDRA_HOST",
      "GHIDRA_PORT"
    ],
    "usageInstructions": "Perform automated reverse engineering and binary analysis using Ghidra with AI assistance. Requires Ghidra installation and manual setup.",
    "category": "Security",
    "github": {
      "owner": "LaurieWired",
      "repo": "GhidraMCP",
      "name": "GhidraMCP",
      "full_name": "LaurieWired/GhidraMCP",
      "description": "MCP Server for Ghidra",
      "stars": 5282,
      "forks": 380,
      "language": "Java",
      "updated_at": "2025-07-01T05:00:20Z",
      "created_at": "2025-03-23T05:36:55Z",
      "url": "https://github.com/LaurieWired/GhidraMCP"
    }
  },
  "notion": {
    "name": "Notion",
    "githubLink": "https://github.com/makenotion/notion-mcp-server",
    "package": "@makenotion/notion-mcp-server",
    "description": "Official Notion MCP server for comprehensive workspace and database management",
    "installCommand": "npx -y @makenotion/notion-mcp-server",
    "requiredEnvVars": [
      "NOTION_API_KEY"
    ],
    "optionalParams": [
      "NOTION_DATABASE_ID"
    ],
    "usageInstructions": "Access Notion pages, databases, and blocks. Create, read, update content in your Notion workspace. Requires Notion integration API key.",
    "category": "Productivity",
    "github": {
      "owner": "makenotion",
      "repo": "notion-mcp-server",
      "name": "notion-mcp-server",
      "full_name": "makenotion/notion-mcp-server",
      "description": "Official Notion MCP Server",
      "stars": 2379,
      "forks": 190,
      "language": "TypeScript",
      "updated_at": "2025-07-01T13:21:24Z",
      "created_at": "2025-03-10T18:09:08Z",
      "url": "https://github.com/makenotion/notion-mcp-server"
    }
  },
  "obsidian-advanced": {
    "name": "Obsidian (Advanced)",
    "githubLink": "https://github.com/cyanheads/obsidian-mcp-server",
    "package": "obsidian-mcp-server",
    "description": "Comprehensive Obsidian vault interactions via Local REST API with advanced note management",
    "installCommand": "uvx obsidian-mcp-server",
    "requiredEnvVars": [
      "OBSIDIAN_API_URL",
      "OBSIDIAN_API_KEY"
    ],
    "optionalParams": [
      "VAULT_PATH",
      "TIMEOUT"
    ],
    "usageInstructions": "Advanced Obsidian operations including note reading/writing, tag management, frontmatter operations, and graph navigation. Requires Obsidian Local REST API plugin.",
    "category": "Knowledge Management",
    "github": {
      "owner": "cyanheads",
      "repo": "obsidian-mcp-server",
      "name": "obsidian-mcp-server",
      "full_name": "cyanheads/obsidian-mcp-server",
      "description": "Obsidian Knowledge-Management MCP (Model Context Protocol) server that enables AI agents and development tools to interact with an Obsidian vault. It provides a comprehensive suite of tools for reading, writing, searching, and managing notes, tags, and frontmatter, acting as a bridge to the Obsidian Local REST API plugin.",
      "stars": 124,
      "forks": 25,
      "language": "TypeScript",
      "updated_at": "2025-06-30T17:30:03Z",
      "created_at": "2025-01-23T23:01:25Z",
      "url": "https://github.com/cyanheads/obsidian-mcp-server"
    }
  },
  "git-advanced": {
    "name": "Git (Advanced)",
    "githubLink": "https://github.com/cyanheads/git-mcp-server",
    "package": "git-mcp-server",
    "description": "Comprehensive Git operations with clone, commit, branch, merge, rebase, and worktree support",
    "installCommand": "uvx git-mcp-server",
    "requiredEnvVars": [],
    "optionalParams": [
      "GIT_USER_NAME",
      "GIT_USER_EMAIL",
      "DEFAULT_BRANCH"
    ],
    "usageInstructions": "Full Git workflow support including advanced operations like interactive rebase, worktree management, tag operations, and repository cloning.",
    "category": "Version Control",
    "github": {
      "owner": "cyanheads",
      "repo": "git-mcp-server",
      "name": "git-mcp-server",
      "full_name": "cyanheads/git-mcp-server",
      "description": "An MCP (Model Context Protocol) server enabling LLMs and AI agents to interact with Git repositories. Provides tools for comprehensive Git operations including clone, commit, branch, diff, log, status, push, pull, merge, rebase, worktree, tag management, and more, via the MCP standard. STDIO & HTTP.",
      "stars": 88,
      "forks": 21,
      "language": "TypeScript",
      "updated_at": "2025-06-30T01:49:19Z",
      "created_at": "2024-12-16T12:21:40Z",
      "url": "https://github.com/cyanheads/git-mcp-server"
    }
  },
  "npm-docs": {
    "name": "NPM Documentation",
    "githubLink": "https://github.com/bsmi021/mcp-npm_docs-server",
    "package": "mcp-npm-docs-server",
    "description": "Fetches NPM package metadata and documentation with intelligent caching",
    "installCommand": "uvx mcp-npm-docs-server",
    "requiredEnvVars": [],
    "optionalParams": [
      "NPM_CACHE_TTL",
      "NPM_CACHE_DB_PATH"
    ],
    "usageInstructions": "Retrieve package information, README content, and documentation from NPM registry with local caching for performance.",
    "category": "Development Tools",
    "github": {
      "owner": "bsmi021",
      "repo": "mcp-npm_docs-server",
      "name": "mcp-npm_docs-server",
      "full_name": "bsmi021/mcp-npm_docs-server",
      "description": "An MCP server that provides a tool to fetch metadata and documentation (including README content) for NPM packages, using a local cache to improve performance.",
      "stars": 1,
      "forks": 0,
      "language": "TypeScript",
      "updated_at": "2025-04-05T04:49:37Z",
      "created_at": "2025-03-30T13:43:47Z",
      "url": "https://github.com/bsmi021/mcp-npm_docs-server"
    }
  },
  "npm-search": {
    "name": "NPM Search",
    "githubLink": "https://github.com/btwiuse/npm-search-mcp-server",
    "package": "npm-search-mcp-server",
    "description": "Search and discover NPM packages with dependency analysis and popularity metrics",
    "installCommand": "uvx npm-search-mcp-server",
    "requiredEnvVars": [],
    "optionalParams": [
      "SEARCH_LIMIT",
      "CACHE_DURATION"
    ],
    "usageInstructions": "Search NPM registry, analyze package dependencies, view popularity metrics, and discover related packages.",
    "category": "Development Tools",
    "github": {
      "owner": "btwiuse",
      "repo": "npm-search-mcp-server",
      "name": "npm-search-mcp-server",
      "full_name": "btwiuse/npm-search-mcp-server",
      "description": "MCP server for searching npm packages",
      "stars": 10,
      "forks": 4,
      "language": "JavaScript",
      "updated_at": "2025-06-05T00:12:39Z",
      "created_at": "2025-01-04T07:28:04Z",
      "url": "https://github.com/btwiuse/npm-search-mcp-server"
    }
  },
  "docker": {
    "name": "Docker",
    "githubLink": "https://github.com/docker/mcp-servers",
    "package": null,
    "description": "Secure code execution in Docker containers for AI development workflows",
    "installCommand": "docker pull docker/mcp-server && docker run -d docker/mcp-server",
    "requiredEnvVars": [
      "DOCKER_HOST"
    ],
    "optionalParams": [
      "DOCKER_CERT_PATH",
      "DOCKER_TLS_VERIFY"
    ],
    "usageInstructions": "Execute code securely in isolated Docker containers, manage containers and images, enable sandboxed AI operations.",
    "category": "DevOps",
    "github": {
      "owner": "docker",
      "repo": "mcp-servers",
      "name": "mcp-servers",
      "full_name": "docker/mcp-servers",
      "description": "Model Context Protocol Servers",
      "stars": 507,
      "forks": 48,
      "language": "JavaScript",
      "updated_at": "2025-07-01T09:58:30Z",
      "created_at": "2024-12-10T00:44:26Z",
      "url": "https://github.com/docker/mcp-servers"
    }
  }
}