{
  "everything": {
    "name": "Everything",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/everything",
    "package": "@modelcontextprotocol/server-everything",
    "description": "Reference/test server with prompts, resources, and tools",
    "installCommand": "npx @modelcontextprotocol/server-everything",
    "requiredEnvVars": [],
    "optionalParams": ["CONFIG_PATH"],
    "usageInstructions": "Development and testing server with example implementations",
    "category": "Development"
  },
  "fetch": {
    "name": "Fetch",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch",
    "package": "@modelcontextprotocol/server-fetch",
    "description": "Web content fetching and processing",
    "installCommand": "npx @modelcontextprotocol/server-fetch",
    "requiredEnvVars": [],
    "optionalParams": ["USER_AGENT", "TIMEOUT"],
    "usageInstructions": "Fetch and process web content for efficient LLM usage",
    "category": "Web Scraping"
  },
  "filesystem": {
    "name": "Filesystem",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
    "package": "@modelcontextprotocol/server-filesystem",
    "description": "Local filesystem operations",
    "installCommand": "npx @modelcontextprotocol/server-filesystem",
    "requiredEnvVars": [],
    "optionalParams": ["ALLOWED_DIRECTORIES"],
    "usageInstructions": "Read, write, and manage local files and directories",
    "category": "File Management"
  },
  "git": {
    "name": "Git",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
    "package": "@modelcontextprotocol/server-git",
    "description": "Git repository operations",
    "installCommand": "npx @modelcontextprotocol/server-git",
    "requiredEnvVars": [],
    "optionalParams": ["REPOSITORY_PATH"],
    "usageInstructions": "Perform Git operations like commit, push, pull, and branch management",
    "category": "Version Control"
  },
  "memory": {
    "name": "Memory",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
    "package": "@modelcontextprotocol/server-memory",
    "description": "Persistent memory and knowledge storage",
    "installCommand": "npx @modelcontextprotocol/server-memory",
    "requiredEnvVars": [],
    "optionalParams": ["MEMORY_FILE_PATH"],
    "usageInstructions": "Store and retrieve persistent memories across conversations",
    "category": "Data Storage"
  },
  "sequentialthinking": {
    "name": "Sequential Thinking",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/sequentialthinking",
    "package": "@modelcontextprotocol/server-sequential-thinking",
    "description": "Sequential thinking and reasoning tools",
    "installCommand": "npx @modelcontextprotocol/server-sequential-thinking",
    "requiredEnvVars": [],
    "optionalParams": ["THINKING_DEPTH"],
    "usageInstructions": "Enable step-by-step reasoning and problem-solving approaches",
    "category": "AI/ML"
  },
  "time": {
    "name": "Time",
    "githubLink": "https://github.com/modelcontextprotocol/servers/tree/main/src/time",
    "package": "@modelcontextprotocol/server-time",
    "description": "Time and scheduling utilities",
    "installCommand": "npx @modelcontextprotocol/server-time",
    "requiredEnvVars": [],
    "optionalParams": ["TIMEZONE"],
    "usageInstructions": "Get current time, schedule events, and manage time zones",
    "category": "Utilities"
  },
  "obsidian": {
    "name": "Obsidian",
    "githubLink": "https://github.com/calclavia/mcp-obsidian",
    "package": null,
    "description": "Read and search through Obsidian vault or Markdown notes directory",
    "installCommand": "pip install mcp-obsidian",
    "requiredEnvVars": ["OBSIDIAN_VAULT_PATH"],
    "optionalParams": ["SEARCH_DEPTH"],
    "usageInstructions": "Access and search Obsidian notes and Markdown files",
    "category": "Knowledge Management"
  },
  "spotify": {
    "name": "Spotify",
    "githubLink": "https://github.com/varunneal/spotify-mcp",
    "package": null,
    "description": "MCP server allowing LLM to play and use Spotify",
    "installCommand": "pip install spotify-mcp",
    "requiredEnvVars": ["SPOTIFY_CLIENT_ID", "SPOTIFY_CLIENT_SECRET"],
    "optionalParams": ["SPOTIFY_REDIRECT_URI"],
    "usageInstructions": "Control Spotify playback and search music",
    "category": "Entertainment"
  },
  "kubernetes": {
    "name": "Kubernetes",
    "githubLink": "https://github.com/Flux159/mcp-server-kubernetes",
    "package": null,
    "description": "Connect to Kubernetes cluster and manage pods, deployments, and services",
    "installCommand": "pip install mcp-kubernetes",
    "requiredEnvVars": ["KUBECONFIG"],
    "optionalParams": ["NAMESPACE"],
    "usageInstructions": "Manage Kubernetes resources via natural language interface",
    "category": "DevOps"
  },
  "aws": {
    "name": "AWS",
    "githubLink": "https://github.com/awslabs/mcp",
    "package": null,
    "description": "Specialized MCP servers bringing AWS best practices to development workflow",
    "installCommand": "pip install mcp-aws",
    "requiredEnvVars": ["AWS_ACCESS_KEY_ID", "AWS_SECRET_ACCESS_KEY", "AWS_REGION"],
    "optionalParams": ["AWS_PROFILE"],
    "usageInstructions": "Interact with various AWS services and resources",
    "category": "Cloud Services"
  },
  "clerk": {
    "name": "Clerk",
    "githubLink": "https://github.com/clerk/javascript/tree/HEAD/packages/agent-toolkit",
    "package": "@clerk/agent-toolkit",
    "description": "Authentication and user management with Clerk for AI agents",
    "installCommand": "npx @clerk/agent-toolkit",
    "requiredEnvVars": ["CLERK_SECRET_KEY"],
    "optionalParams": [],
    "usageInstructions": "Integrate Clerk authentication with AI agent frameworks. Manage users, organizations, and inject session claims into AI prompts. Warning: Agent behavior is non-deterministic - use carefully in production.",
    "category": "Authentication"
  },
  "playwright": {
    "name": "Microsoft Playwright",
    "githubLink": "https://github.com/microsoft/playwright-mcp",
    "package": "@playwright/mcp@latest",
    "description": "Browser automation and testing with Playwright",
    "installCommand": "npx @playwright/mcp@latest",
    "requiredEnvVars": [],
    "optionalParams": ["BROWSER_TYPE", "HEADLESS", "VIEWPORT_WIDTH", "VIEWPORT_HEIGHT", "DEFAULT_TIMEOUT"],
    "usageInstructions": "Automate browser interactions, perform web testing, and capture screenshots",
    "category": "Development Tools"
  },
  "context7": {
    "name": "Context7",
    "githubLink": "https://github.com/upstash/context7",
    "package": "@upstash/context7-mcp",
    "description": "Context management and conversation memory system",
    "installCommand": "npx @upstash/context7-mcp",
    "requiredEnvVars": [],
    "optionalParams": ["UPSTASH_REDIS_REST_URL", "UPSTASH_REDIS_REST_TOKEN", "CONTEXT_KEY", "MAX_CONTEXT_SIZE"],
    "usageInstructions": "Manage conversation context, maintain session memory, and handle context switching",
    "category": "AI & Machine Learning"
  },
  "taskmaster": {
    "name": "Task Master",
    "githubLink": "https://github.com/eyaltoledano/claude-task-master",
    "package": "task-master-mcp",
    "description": "Comprehensive task management with projects, contexts, and advanced organization",
    "installCommand": "npx task-master-ai",
    "requiredEnvVars": [],
    "optionalParams": [""],
    "usageInstructions": "Manage tasks with projects, contexts, priorities, due dates, and dependencies. Supports natural language input for task creation and filtering.",
    "category": "Productivity"
  },
  "xcodebuild": {
    "name": "Xcode Build",
    "githubLink": "https://github.com/cameroncooke/XcodeBuildMCP",
    "package": "xcodebuildmcp",
    "description": "Xcode project building and iOS/macOS development automation",
    "installCommand": "npx -y xcodebuildmcp@latest",
    "requiredEnvVars": [],
    "optionalParams": ["SENTRY_DISABLED", "PROJECT_PATH", "SCHEME", "CONFIGURATION", "DESTINATION"],
    "usageInstructions": "Build, test, and manage Xcode projects for iOS and macOS development",
    "category": "Development Tools"
  },
  "supabase": {
    "name": "Supabase",
    "githubLink": "https://github.com/supabase-community/supabase-mcp",
    "package": "@supabase/mcp-server-supabase",
    "description": "Complete Supabase platform integration for database and project management",
    "installCommand": "npx @supabase/mcp-server-supabase@latest",
    "requiredEnvVars": ["SUPABASE_ACCESS_TOKEN"],
    "optionalParams": ["PROJECT_REF"],
    "usageInstructions": "Manage Supabase projects, design tables, run SQL queries, create database branches, generate TypeScript types, and handle migrations",
    "category": "Databases"
  },
  "skyvern": {
    "name": "Skyvern",
    "githubLink": "https://github.com/Skyvern-AI/skyvern",
    "package": "skyvern",
    "description": "Browser automation for AI applications - enables form filling, file downloads, and web research",
    "installCommand": "pip install skyvern",
    "requiredEnvVars": ["SKYVERN_BASE_URL", "SKYVERN_API_KEY"],
    "optionalParams": [],
    "usageInstructions": "Connect AI applications to the browser for automated web interactions. Supports form filling, file downloads, web research, and other browser-based tasks. Run 'skyvern init' to configure, then optionally 'skyvern run server' for local deployment.",
    "category": "Automation"
  },
  "nixos": {
    "name": "NixOS",
    "githubLink": "https://github.com/utensils/mcp-nixos",
    "package": "mcp-nixos",
    "description": "Provides real-time information about NixOS packages, configurations, and version histories",
    "installCommand": "uvx mcp-nixos",
    "requiredEnvVars": [],
    "optionalParams": ["ELASTICSEARCH_URL"],
    "usageInstructions": "Search NixOS packages, configuration options, Home Manager settings, nix-darwin configurations, and package version history. Queries live NixOS APIs for accurate data.",
    "category": "Development Tools"
  },
  "shadcn-ui": {
    "name": "shadcn/ui",
    "githubLink": "https://github.com/heilgar/shadcn-ui-mcp-server",
    "package": "@heilgar/mcp-server-shadcn-ui",
    "description": "Browse and install shadcn/ui components and utilities for React applications",
    "installCommand": "npx @heilgar/mcp-server-shadcn-ui",
    "requiredEnvVars": [],
    "optionalParams": ["FRAMEWORK"],
    "usageInstructions": "Search, view documentation, and install shadcn/ui components directly into your React project. Supports component browsing, installation, and dependency management.",
    "category": "UI Components"
  }
}